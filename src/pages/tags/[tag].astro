---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
import type { MarkdownInstance } from "astro";

interface PostsFrontmatter {
  title: string;
  pubDate: string;
  description: string;
  author: string;
  image: {
    url: string;
    alt: string
  }
  tags: string[];
}

export const prerender = true;

export async function getStaticPaths() {
  const allPosts = Object.values(import.meta.glob<MarkdownInstance<PostsFrontmatter>>('../posts/*.md', { eager: true }));

  const uniqueTags = [...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat())];

  return uniqueTags.map(tag => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts }
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    { posts.map((post: any) => <BlogPost url={post.url} title={post.frontmatter.title} />) }
  </ul>
</BaseLayout>


